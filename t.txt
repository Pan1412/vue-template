<template>
  <div>
    <div class="d-flex pt-5 bg-light" style="height: 100vh;">
      <div
        class="sub-main-box p-4 rounded shadow bg-white"
        id="box-menu-nav"
        style="width: 270px !important; min-width: 270px; flex: 0 0 270px; margin-top: -25px; overflow: hidden; padding-right: 0px !important;"
      >
        <div class="box-main-sub-nav-menu">
          <div class="box-profile-nav mt-3 d-flex flex-column align-items-center">
            <img
              :src="profile.picTea"
              v-if="profile.picTea !== ''"
              alt="user"
              class="box-img-profile-nav rounded-circle border"
              style="width: 130px; height: 130px; object-fit: cover;"
            >
            <img
              src="/assets/image/user-img/profile-defalut.png"
              v-else
              alt="user"
              class="box-img-profile-nav ms-2 rounded-circle border"
              style="width: 130px; height: 130px; object-fit: cover;"
            >
            <div class="mt-3 text-center">
              <h6 class="h4-pwks fw-500 mb-0">
                {{ profile.prefixTea }}{{ profile.firstName }} {{ profile.lastName }}
              </h6>
              <h7 class=" mt-1 mb-0 text-muted">
                <Icon name="clarity:group-solid" style="font-size: 1rem; margin-top: -2px;" />
                {{ profile.groupName === 'ไม่ระบุ' ? 'ผู้บริหาร' : profile.groupName }}
              </h7>
            </div>
          </div>

          <div class="menu-scroll-container">
            <div v-for="mainMenus in filteredMenu" :key="mainMenus.headName" class="mt-4">
              <div class="box-head-menu fm-kanit">
                <p class="font-head-menu" style="color: #6c757d;">{{ mainMenus.headName }}</p>
                <div class="divider-solid mt-3"></div>
              </div>

              <div class="grid-nav-sub-menu grid-column-sub-menu mt-1">
                <template v-for="subMenu in mainMenus.subMenu" :key="subMenu.subMenuName">
                  <template v-if="!subMenu.multi">
                    <div class="box-menu mt-2" v-if="subMenu.permission === profile.roll || subMenu.permission === ''">
                      <div class="d-flex cursor-main size-menu align-items-center hover-text" @click="nextPage(subMenu.link)">
                        <Icon :name="subMenu.icon" class="ms-3" style="font-size: 1.3rem;" />
                        <h6 class="h5-pwks fw-500 ms-2 mt-1" style="font-size: 0.9rem; margin: 0; padding: 0;">
                          {{ subMenu.subMenuName }}
                        </h6>
                      </div>
                    </div>
                  </template>

                  <template v-else>
                    <div class="row g-2">
                      <div class="col-6" v-for="multi in subMenu.multi" :key="multi.subMenuName">
                        <div class="box-menu-multi" v-if="multi.permission === profile.roll || multi.permission === ''">
                          <div class="d-flex cursor-main size-menu align-items-center" @click="nextPage(multi.link)">
                            <Icon :name="multi.icon" class="ms-3" style="font-size: 1.3rem;" />
                            <h6 class="h5-pwks fw-500 ms-2 mt-1" style="font-size: 0.9rem; margin: 0; padding: 0;">
                              {{ multi.subMenuName }}
                            </h6>
                          </div>
                        </div>
                      </div>
                    </div>
                  </template>
                </template>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import callApi from '../api/callApi';

export default {
  props: {
    openSubMenu: {
      type: Boolean,
      default: false
    }
  },
  data() {
    return {
      menu: [],
      listMenuCheck: [
        {
          headName: 'รายงาน SDQ',
          permission: 'teacher',
          subMenu: [
            { subMenuName: 'ประเมิน SDQ', link: '/teacher', icon: 'material-symbols:list-alt-check-rounded', permission: '' },
            { subMenuName: 'ผลการประเมินรายบุคคล', link: '/teacher/sdq', icon: 'material-symbols:demography-rounded', permission: '' },
            { subMenuName: 'ผลการประเมินรายห้องเรียน', link: '/teacher/sdq-result-room', icon: 'material-symbols:demography-rounded', permission: '' },
            

            { subMenuName: 'สรุปผลรายบุคคล', link: '/admin/sdq', icon: 'material-symbols:bar-chart-4-bars-rounded', permission: '' },
            { subMenuName: 'สรุปผลรายห้องเรียน', link: '/admin/sdq-result-room', icon: 'material-symbols:bar-chart-4-bars-rounded', permission: 'admin' },
            { subMenuName: 'สรุปผลรายชั้นเรียน', link: '/admin/sdq-result-class', icon: 'material-symbols:bar-chart-4-bars-rounded', permission: 'admin' },
            { subMenuName: 'สรุปผลระดับโรงเรียน', link: '/admin/sdq-result-school', icon: 'material-symbols:bar-chart-4-bars-rounded', permission: 'admin' },
            { subMenuName: 'สรุปรายงานปัญหานักเรียน', link: '/admin/report-problem', icon: 'material-symbols:bar-chart-4-bars-rounded', permission: 'admin' },
            
          ]
        },
        
        {
          headName: 'รายงาน EQ',
          permission: 'teacher',
          subMenu: [
            { subMenuName: 'ผลการประเมินรายบุคคล', link: '/teacher/eq', icon: 'material-symbols:demography-rounded', permission: '' },
            { subMenuName: 'ผลการประเมินรายห้องเรียน', link: '/teacher/eq-result-room', icon: 'material-symbols:demography-rounded', permission: '' },
            

            { subMenuName: 'สรุปผลรายบุคคล', link: '/admin/eq', icon: 'material-symbols:bar-chart-4-bars-rounded', permission: '' },
            { subMenuName: 'สรุปผลรายห้องเรียน', link: '/admin/eq-result-room', icon: 'material-symbols:bar-chart-4-bars-rounded', permission: '' },
            { subMenuName: 'สรุปผลรายชั้นเรียน', link: '/admin/eq-result-class', icon: 'material-symbols:bar-chart-4-bars-rounded', permission: '' },
            { subMenuName: 'สรุปผลระดับโรงเรียน', link: '/admin/eq-result-school', icon: 'material-symbols:bar-chart-4-bars-rounded', permission: '' },
          ]
        },

      ],
      isModal: false,
      typeModal: '',
      profile: {
        idCard: '',
        prefixTea: '',
        firstName: '',
        lastName: '',
        positionKey: '',
        groupKey: '',
        groupName: '',
        picTea: '',
        roll: ''
      },
    }
  },
  computed: {
    // กรองเมนูตาม permission ของผู้ใช้
    filteredMenu() {
      return this.menu.filter(menuItem => {
        // ถ้าเมนูไม่มี permission ให้แสดงเสมอ หรือถ้ามี permission ตรงกับ roll ของผู้ใช้จึงแสดง
        // console.log(this.profile.roll)
        return !menuItem.permission || menuItem.permission === this.profile.roll;
      });
    }
  },
  async mounted() {
    this.menu = this.listMenuCheck;
    const auth = this.getStore().setAuth();
    this.profile.prefixTea = auth.prefix_name;
    this.profile.firstName = auth.first_name;
    this.profile.lastName = auth.last_name;
    this.profile.groupName = auth.group_name;
    this.profile.roll = auth.roll;
    console.log(this.profile.roll)

    await this.getImgProfile();
    this.switchTab('check', 0);
  },
  methods: {
    async getImgProfile() {
      const res = await callApi.getProfile({ t_id: this.getStore().setAuth().id });
      this.profile.picTea = res.result.pic_tea || '';
    },
    switchTab(type, arr, status = true) {
      if (!status) return;
      this.menu = this.listMenuCheck;
    },
    nextPage(link) {
      this.gotoPage(link);
      this.clickOpenSubMenu();
    },
    clickOpenSubMenu() {
      if (this.checkDevice() === 'desktop') return;
      const current = this.getStore().setCheckSideMenu();
      this.getStore().setCheckSideMenu(!current);
    },
  },
}
</script>

<style lang="scss" scoped>
#box-menu-nav {
  width: 270px !important;
  min-width: 270px !important;
  max-width: 270px !important;
  overflow: hidden; /* Keep this to hide overflow from the main container */
}
.hover-text:hover {
  color: #6c757d !important; /* text-secondary สี Bootstrap */
}
.box-img-profile-nav {
  border-radius: 50%;
  object-fit: cover;
}
.box-main-sub-nav-menu {
  height: calc(100vh - 80px);
  position: relative;
  overflow: auto; /* Changed from 'hidden' to 'auto' to enable scrolling */
  scrollbar-width: thin; /* For Firefox */
  scrollbar-color: rgba(0, 0, 0, 0.2) transparent; /* For Firefox */
}

/* Custom scrollbar for webkit browsers */
.box-main-sub-nav-menu::-webkit-scrollbar {
  width: 6px; /* Narrow scrollbar */
}

.box-main-sub-nav-menu::-webkit-scrollbar-track {
  background: transparent; /* Transparent track */
  margin-right: 2px;
}

.box-main-sub-nav-menu::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0.2); /* Light gray scrollbar */
  border-radius: 10px;
}

.menu-scroll-container {
  padding-bottom: 20px; /* Add some padding at the bottom for better UX */
  padding-right: 5px; /* Add padding to keep content away from scrollbar */
}
.sub-main-box {
  overflow: hidden !important;
}
.scroll-select-menu {
  overflow: hidden !important;
}
</style>